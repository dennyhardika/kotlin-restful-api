Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=kotlin-restful-api\r\nspring.datasource.username=${DATABASE_USERNAME:kotlin}\r\nspring.datasource.password=${DATABASE_PASSWORD:kotlin}\r\nspring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/restful-api}\r\nspring.jpa.hibernate.ddl-auto=update
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision d6f45b3517b00f304b59ad9566ba9fa052b82bc8)
+++ b/src/main/resources/application.properties	(date 1736273019475)
@@ -1,5 +1,20 @@
 spring.application.name=kotlin-restful-api
 spring.datasource.username=${DATABASE_USERNAME:kotlin}
 spring.datasource.password=${DATABASE_PASSWORD:kotlin}
-spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/restful-api}
-spring.jpa.hibernate.ddl-auto=update
\ No newline at end of file
+spring.datasource.url=${DATABASE_URL:jdbc:postgresql://145.223.74.131:5431/restful-api}
+#//145.223.74.131:5432 -> //0.0.0.0:5432
+spring.jpa.hibernate.ddl-auto=update
+server.port=5432
+
+
+#spring.datasource.url=jdbc:postgresql://localhost:5432/Deviceproduct
+#spring.datasource.username=kotlin
+#spring.datasource.password=Kotlin12345678910
+#spring.datasource.driver-class-name=org.postgresql.Driver
+#spring.jpa.hibernate.ddl-auto=update
+#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
+#spring.jpa.show-sql=true
+#spring.jpa.properties.hibernate.format_sql=true
+
+#spring.datasource.driver-class-name=org.postgresql.Driver
+#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
\ No newline at end of file
Index: docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nservices:\r\n  kotlin-restful-api-posgres:\r\n    container_name: \"kotlin-restful-api-postgres\"\r\n    image: postgres:latest\r\n    ports:\r\n      - 5432:5432\r\n    environment:\r\n      POSTGRES_PASSWORD: kotlin\r\n      POSTGRES_USER: kotlin\r\n      POSTGRES_DB: restful-api
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker-compose.yml b/docker-compose.yml
--- a/docker-compose.yml	(revision d6f45b3517b00f304b59ad9566ba9fa052b82bc8)
+++ b/docker-compose.yml	(date 1736065252671)
@@ -1,10 +1,10 @@
 
 services:
-  kotlin-restful-api-posgres:
+  kotlin-restful-api-postgres:
     container_name: "kotlin-restful-api-postgres"
     image: postgres:latest
     ports:
-      - 5432:5432
+      - 5433:5432
     environment:
       POSTGRES_PASSWORD: kotlin
       POSTGRES_USER: kotlin
Index: src/main/kotlin/programmer_zaman_now/kotlin_restful_api/catatan
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// membuat creat product api\r\n1. entity package\r\n  a. Product(data class)\r\n2. repository package\r\n  a. ProductRepository(interface) -> extend JpaRepository\r\n3. service package\r\n  a. ProductService(interface)\r\n4. model package\r\n  a. ProductResponse(data class)\r\n  // format sama dengan entity tapi annotation tidak diperlukan\r\n  b. CreateProductRequest(data class)\r\n5. service/impl\r\n  a. ProductServiceImpl(class)\r\n6. model package\r\n  a. WebResponse(data class)\r\n  // untuk generic data\r\n7. controller package\r\n  a. ProductController(class)\r\n8. Setting \"application.properties\"\r\n  // menghubungkan dengan settingan compose\r\n9. jalankan dan pastikan sudah berhasil running\r\n10. cek tabel product di pengelola database\r\n\r\n// validation (untuk validation jika value null & pemindahan ke bad request 400\r\n1. menambahkan dependencies validation\r\n   // dikarenakan belum ke generate springboot\r\n2. model/CreateProductRequest & service/impl/ProductServiceImpl\r\n  // penyesuaian nullable\r\n3. model/CreateProductRequest\r\n   // menambahkan penekanan NotBlank & NotNull\r\n   // memberi aturan minimal value yang masuk jika value Int\r\n4. validation package\r\n  a. ValidationUtil(class)\r\n5. controller\r\n  a. ErrorController(class)\r\n  // penanggulangan error 500\r\n\r\n// menguji create api\r\n1. pastikan docker & application running\r\n2. cek pada postman dengan penyesuaian alamat & perintah\r\nproblem : rules -> value price & quantity belum bisa sesuai\r\n\r\n// membuat get product api\r\n1. service/ProductService\r\n   a. membuat jalur ke function get\r\n2. service/impl/ProductServiceImpl\r\n   a. membuat function get\r\n       dan memberi respon dan tampilan notFound jika tidak terdapat data pencarian\r\n\r\n// membuat update product api\r\n1. service/ProductService\r\n   a. membuat jalur ke function put\r\n2. model/UpdateProductRequest\r\n   a. membuat format sama dengan CreateProductRequest\r\n3. service/impl/ProductServiceImpl\r\n   a. membuat function put\r\n       dan memberi respon dan tampilan jika terdapat ketidak sesuaian\r\n\r\n// membuat delete product api\r\n1. service/ProductService\r\n   a. membuat jalur ke function Delete\r\n2. service/impl/ProductServiceImpl\r\n   a. membuat function Delete\r\n          dan memberi respon dan tampilan jika terdapat ketidak sesuaian\r\n\r\n// membuat list product api\r\n1. model/ListProductRequest\r\n  a. membuat ListProductRequest\r\n2. service/ProductService\r\n   a. membuat jalur ke function list\r\n3. service/impl/ProductServiceImpl\r\n   a. membuat function list\r\n          dan menampilkan data semua yang tersimpan
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/programmer_zaman_now/kotlin_restful_api/catatan b/src/main/kotlin/programmer_zaman_now/kotlin_restful_api/catatan
--- a/src/main/kotlin/programmer_zaman_now/kotlin_restful_api/catatan	(revision d6f45b3517b00f304b59ad9566ba9fa052b82bc8)
+++ b/src/main/kotlin/programmer_zaman_now/kotlin_restful_api/catatan	(date 1736063847320)
@@ -70,4 +70,15 @@
    a. membuat jalur ke function list
 3. service/impl/ProductServiceImpl
    a. membuat function list
-          dan menampilkan data semua yang tersimpan
\ No newline at end of file
+          dan menampilkan data semua yang tersimpan
+
+
+#  kotlin-restful-api:
+#    container_name: kotlin-restful-api
+#    image: kotlin-restful-api:0.0.1
+#    ports:
+#      - 8080:8080
+#    environment:
+#      DATABASE_USERNAME: kotlin
+#      DATABASE_PASSWORD: kotlin
+#      DATABASE_URL: jdbc:postgresql://kotlin-restful-api-postgres:5432/restful-api
\ No newline at end of file
Index: test.http
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>### Create Product\r\nPOST http://localhost:8080/api/products\r\nContent-Type: applicatio/json\r\naccept: application/json\r\n\r\n{\r\n    \"id\" : \"A0001\",\r\n    \"name\" : \"Mac Book Pro 15\",\r\n    \"price\" : 30000000,\r\n    \"quantity\" : 10\r\n}\r\n\r\n### Get Product\r\nGet http://localhost:8080/api/products/A0001\r\nAccept: application/json\r\n\r\n\r\n### Put Product\r\nPut http://localhost:8080/api/products/A0001\r\nContent-Type: applicatio/json\r\naccept: application/json\r\n\r\n{\r\n    \"name\" : \"Mac Book Pro 18 New\",\r\n    \"price\" : 50000000,\r\n    \"quantity\" : 100\r\n}\r\n\r\n### Delete product\r\nDelete http://localhost:8080/api/products/A0001\r\naccept: application/json\r\n\r\n### List product\r\nGET http://localhost:8080/api/products\r\naccept: application/json\r\n\r\nGET http://localhost:8080/api/products?size=5&page=1 (cth: mencari id dengan rentang tertentu / lebih dari 5)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test.http b/test.http
--- a/test.http	(revision d6f45b3517b00f304b59ad9566ba9fa052b82bc8)
+++ b/test.http	(date 1736147204385)
@@ -1,5 +1,5 @@
 ### Create Product
-POST http://localhost:8080/api/products
+POST http://145.223.74.131:5432/api/products
 Content-Type: applicatio/json
 accept: application/json
 
@@ -35,3 +35,7 @@
 accept: application/json
 
 GET http://localhost:8080/api/products?size=5&page=1 (cth: mencari id dengan rentang tertentu / lebih dari 5)
+
+
+// gradle
+untuk build gradle di haruskan container yang di kaitkan dalam keadaan hidup
Index: Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>FROM openjdk:21-jdk\r\n\r\n#COPY build/libs/kotlin-restful-api-0.0.1-SNAPSHOT.jar /app/application.jar\r\n#\r\n#CMD [\"java\", \"-jar\", \"/app/application.jar\"]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dockerfile b/Dockerfile
--- a/Dockerfile	(revision d6f45b3517b00f304b59ad9566ba9fa052b82bc8)
+++ b/Dockerfile	(date 1734756659322)
@@ -1,5 +1,5 @@
 FROM openjdk:21-jdk
 
-#COPY build/libs/kotlin-restful-api-0.0.1-SNAPSHOT.jar /app/application.jar
-#
-#CMD ["java", "-jar", "/app/application.jar"]
\ No newline at end of file
+COPY build/libs/kotlin-restful-api-0.0.1-SNAPSHOT.jar /app/application.jar
+
+CMD ["java", "-jar", "/app/application.jar"]
\ No newline at end of file
Index: src/main/kotlin/programmer_zaman_now/kotlin_restful_api/repository/ProductRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package programmer_zaman_now.kotlin_restful_api.repository\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository\r\nimport programmer_zaman_now.kotlin_restful_api.entity.Product\r\n\r\ninterface ProductRepository : JpaRepository<Product, String>{\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/programmer_zaman_now/kotlin_restful_api/repository/ProductRepository.kt b/src/main/kotlin/programmer_zaman_now/kotlin_restful_api/repository/ProductRepository.kt
--- a/src/main/kotlin/programmer_zaman_now/kotlin_restful_api/repository/ProductRepository.kt	(revision d6f45b3517b00f304b59ad9566ba9fa052b82bc8)
+++ b/src/main/kotlin/programmer_zaman_now/kotlin_restful_api/repository/ProductRepository.kt	(date 1735112786094)
@@ -1,7 +1,8 @@
 package programmer_zaman_now.kotlin_restful_api.repository
 
-import org.springframework.data.jpa.repository.JpaRepository
+
 import programmer_zaman_now.kotlin_restful_api.entity.Product
+import org.springframework.data.jpa.repository.JpaRepository
 
 interface ProductRepository : JpaRepository<Product, String>{
 
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n\tkotlin(\"jvm\") version \"1.9.25\"\r\n\tkotlin(\"plugin.spring\") version \"1.9.25\"\r\n\tid(\"org.springframework.boot\") version \"3.4.0\"\r\n\tid(\"io.spring.dependency-management\") version \"1.1.6\"\r\n\tkotlin(\"plugin.jpa\") version \"1.9.25\"\r\n}\r\n\r\ngroup = \"programmer-zaman-now\"\r\nversion = \"0.0.1-SNAPSHOT\"\r\n\r\njava {\r\n\ttoolchain {\r\n\t\tlanguageVersion = JavaLanguageVersion.of(21)\r\n\t}\r\n}\r\n\r\nrepositories {\r\n\t\tmaven {  // Jika diperlukan\r\n\t url = uri(\"https://maven.pkg.github.com/dennyhardika/kotlin-restful-api\")\r\n\tcredentials {\r\n\t\tusername = (project.findProperty(\"repoUser\") ?: \"dennydwi\").toString()\r\n\t\tpassword = (project.findProperty(\"repoPassword\") ?: \"124\").toString()\r\n\t}\r\n\t\t}\r\n}\r\n\r\ndependencies {\r\n\timplementation(\"org.springframework.boot:spring-boot-starter-data-jpa:3.3.6\")\r\n\timplementation(\"org.springframework.boot:spring-boot-starter-web\")\r\n\timplementation(\"org.springframework.boot:spring-boot-starter-validation\")\r\n\timplementation(\"com.fasterxml.jackson.module:jackson-module-kotlin\")\r\n\timplementation(\"org.jetbrains.kotlin:kotlin-reflect\")\r\n\truntimeOnly(\"org.postgresql:postgresql\")\r\n\ttestImplementation(\"org.springframework.boot:spring-boot-starter-test\")\r\n\ttestImplementation(\"org.jetbrains.kotlin:kotlin-test-junit5\")\r\n\ttestRuntimeOnly(\"org.junit.platform:junit-platform-launcher\")\r\n\timplementation(\"com.example:library:1.0\")\r\n\timplementation(\"org.springframework.boot:spring-boot-starter-web:3.3.6\")  // Menggunakan pustaka dari Maven Central\r\n\timplementation(\"org.jetbrains.kotlin:kotlin-stdlib:1.9.25\")\r\n}\r\n\r\nkotlin {\r\n\tcompilerOptions {\r\n\t\tfreeCompilerArgs.addAll(\"-Xjsr305=strict\")\r\n\t}\r\n}\r\n\r\nallOpen {\r\n\tannotation(\"jakarta.persistence.Entity\")\r\n\tannotation(\"jakarta.persistence.MappedSuperclass\")\r\n\tannotation(\"jakarta.persistence.Embeddable\")\r\n}\r\n\r\ntasks.withType<Test> {\r\n\tuseJUnitPlatform()\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision d6f45b3517b00f304b59ad9566ba9fa052b82bc8)
+++ b/build.gradle.kts	(date 1735106246167)
@@ -4,6 +4,7 @@
 	id("org.springframework.boot") version "3.4.0"
 	id("io.spring.dependency-management") version "1.1.6"
 	kotlin("plugin.jpa") version "1.9.25"
+
 }
 
 group = "programmer-zaman-now"
@@ -16,13 +17,7 @@
 }
 
 repositories {
-		maven {  // Jika diperlukan
-	 url = uri("https://maven.pkg.github.com/dennyhardika/kotlin-restful-api")
-	credentials {
-		username = (project.findProperty("repoUser") ?: "dennydwi").toString()
-		password = (project.findProperty("repoPassword") ?: "124").toString()
-	}
-		}
+	mavenCentral()  // Jika menggunakan Kotlin DSL
 }
 
 dependencies {
@@ -35,9 +30,12 @@
 	testImplementation("org.springframework.boot:spring-boot-starter-test")
 	testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
 	testRuntimeOnly("org.junit.platform:junit-platform-launcher")
-	implementation("com.example:library:1.0")
+//	implementation("com.example:library:1.0")
 	implementation("org.springframework.boot:spring-boot-starter-web:3.3.6")  // Menggunakan pustaka dari Maven Central
 	implementation("org.jetbrains.kotlin:kotlin-stdlib:1.9.25")
+
+	// set baru
+	implementation("org.postgresql:postgresql")
 }
 
 kotlin {
